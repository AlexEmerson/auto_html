{"name":"Auto html","body":"auto_html\r\n=========\r\n\r\n\r\nauto_html is a Rails extension for transforming URLs to appropriate resource (image, link, YouTube, Vimeo video,...). It's the perfect choice if you don't want to bother visitors with rich HTML editor or markup code, but you still want to allow them to embed video, images, links and more on your site, purely by pasting URL. Check out the [live demo](http://auto-html.rors.org).\r\n\r\n## Example usage\r\n\r\nTransforming string with text and URLs is done with *auto_html* method:\r\n\r\n    include AutoHtml\r\n    \r\n    auto_html('Hey! Checkout out: http://vukajlija.com') { simple_format; link(:target => 'blank') }\r\n    => \"<p>Hey! Checkout out: <a href='http://vukajlija.com' target='blank'>http://vukajlija.com</a></p>\"\r\n\r\nYou'll probably have user input stored in model, so it's a good place to automate and even store this conversion for performance reason. This is done with *auto_html_for* method. Let's say you have model Comment with attribute body. Create another column in table Comments called body_html (again, this is optional but recommended for performance reasons). Now have something like this: \r\n\r\n    class Comment < ActiveRecord::Base\r\n      auto_html_for :body do\r\n        html_escape\r\n        image\r\n        youtube(:width => 400, :height => 250)\r\n        link :target => \"_blank\", :rel => \"nofollow\"\r\n        simple_format\r\n      end\r\n    end\r\n\r\n... and you'll have this behaviour: \r\n\r\n    Comment.create(:body => 'Hey check out this cool video: http://www.youtube.com/watch?v=WdsGihou8J4')  \r\n    => #<Comment id: 123, body: '<p>Hey check out this cool video: <iframe class=\"youtube-player\" type=\"text/html\" width=\"587\" height=\"350\" src=\"http://www.youtube.com/embed/WdsGihou8J4\" frameborder=\"0\"> <br /></iframe></p>'>\r\n\r\nNote that order of invoking filters is important, ie. you want html_escape as first and link amongst last, so that it doesn't transform youtube URL to plain link.\r\n\r\n\r\nNow all you have to do is to display it in template without escaping, since plugin took care of that:\r\n\r\n    <% for comment in @comments %>\r\n       <li><%= comment.body_html %></li>\r\n    <% end %>\r\n\r\n\r\nIf you need to display preview, no problem. Have something like this as action in your controller:\r\n\r\n    def preview\r\n      comment = Comment.new(params[:comment])\r\n      render :text => comment.body_html\r\n    end\r\n\r\nAutoHtml is highly customizable, and you can easily create new filters that will transform user input any way you like. For instance, this is the image filter that comes bundled with plugin:\r\n\r\n    AutoHtml.add_filter(:image) do |text|\r\n      text.gsub(/http:\\/\\/.+\\.(jpg|jpeg|bmp|gif|png)(\\?\\S+)?/i) do |match|\r\n        %|<img src=\"#{match}\" alt=\"\"/>|\r\n      end\r\n    end\r\n\r\n\r\n## Non-ActiveRecord models\r\n\r\nAutoHtml uses standard ActiveModel API, which means that you can include AutoHtmlFor module (that automates transformation of the field) in any non-ActiveRecord model that uses ActiveModel. Here's working [mongoid](http://mongoid.org/) example:\r\n\r\n    class Post\r\n      include Mongoid::Document\r\n      include AutoHtmlFor\r\n\r\n      field :body\r\n\r\n      auto_html_for :body do\r\n        simple_format\r\n        link\r\n      end\r\n    end\r\n\r\n## Rake and Capistrano tasks\r\n\r\nAutoHtml has a Rake task for rebuilding cached in DB column values\r\nUsage: `rake auto_html:rebuild CLASS=[your model]`\r\nWhere `[your model]` is the name of model which values you want to rebuild.\r\n\r\nIf you want to run it on remote server, just add this to your `deploy.rb`:\r\n\r\n    require 'auto_html/capistrano'\r\n    \r\nNow you can run `cap auto_html:rebuild CLASS=[your_model]`.\r\n\r\n## Bundled filters\r\n\r\nFor filter list and options they support check: <http://github.com/dejan/auto_html/tree/master/lib/auto_html/filters>\r\n\r\n\r\n## Install\r\n\r\nSpecify the gem in Gemfile of the project\r\n\r\n    gem \"auto_html\"\r\n\r\n\r\n## Credits\r\n\r\nAuthor: [Dejan Simic](http://github.com/dejan)<br/>\r\nContributors: https://github.com/dejan/auto_html/contributors","tagline":"Rails extension for transforming URLs to appropriate resource (image, link, YouTube, Vimeo video,...) ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}